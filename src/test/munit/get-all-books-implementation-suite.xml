<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-all-books-implementation-suite.xml" />
	
	<munit:test name="get-all-books-implementation-suite-get-all-booksFlowTest" doc:id="08a4739d-444d-41e0-b082-1b816cf28389" description="Test"  ignore="true">
	
		<munit:behavior >
			<set-variable value="#['mocked-token-123']" doc:name="accessTokenMocked" doc:id="9e790f38-cb1c-49e5-b2f3-5b2dc5f8d085" variableName="accessToken"/>
			<munit-tools:mock-when doc:name="OAuthTokenRequestMock" doc:id="f5341472-6d1c-4b85-a448-65123016d8e2" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Validate OAuth Token Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[{ &#10;		'expires_in': 86384, &#10;        'scope': '', &#10;        'client_id': 'dummy-client-id'&#10;        }]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="dbSelectMock" doc:id="b4afe8c7-b86d-4429-b80b-f838d5c8cc45" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="select-library-books-db" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json&#10;---&#10;[&#10;  {&#10;    id: 1,&#10;    title: '1984',&#10;    author: 'George Orwell',&#10;    publishedYear: 1949,&#10;    genre: 'Horror',&#10;    isbn: '9780451524935',&#10;    pageCount: 328,&#10;    language: 'English',&#10;    availableCopies: 5&#10;  },&#10;  {&#10;    id: 2,&#10;    title: 'Brave New World',&#10;    author: 'Aldous Huxley',&#10;    publishedYear: 1932,&#10;    genre: 'Horror',&#10;    isbn: '9780060850524',&#10;    pageCount: 288,&#10;    language: 'English',&#10;    availableCopies: 3&#10;  }&#10;]]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-all-booksFlow" doc:id="416b3e57-c37c-4938-9249-b81928ff0f66" name="get-all-booksFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="af7779b0-d125-409c-b32c-8f2c244ee176" is="#[MunitTools::equalTo([ &#10;      {&#10;        id: 1,&#10;        title: '1984',&#10;        author: 'George Orwell',&#10;        publishedYear: 1949,&#10;        genre: 'Horror',&#10;        isbn: '9780451524935',&#10;        pageCount: 328,&#10;        language: 'English',&#10;        availableCopies: 5&#10;      },&#10;      {&#10;        id: 2,&#10;        title: 'Brave New World',&#10;        author: 'Aldous Huxley',&#10;        publishedYear: 1932,&#10;        genre: 'Horror',&#10;        isbn: '9780060850524',&#10;        pageCount: 288,&#10;        language: 'English',&#10;        availableCopies: 3&#10;      }&#10;    ])]" expression="#[payload]"/>
			<munit-tools:assert doc:name="Assert expression" doc:id="76116d9d-4fbb-40ce-be79-24ae1ad87dd4" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-all-books-implementation-suite-get-all-booksFlowTest-no-books" doc:id="2bb2eb3c-4706-4d1a-a019-bcb0f910e364" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="dbSelectAllBooksMock " doc:id="6edec3da-15f5-445b-81db-4329696cce13" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="select-library-books-db" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to db-get-books" doc:id="383fd1cc-9357-4078-a206-132275b6ffc4" name="db-get-books"/>
		</munit:execution>
	</munit:test>


</mule>
